import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

public class Obfuscator {

	public static void main(String[] args) throws NoSuchAlgorithmException {
		removeMultiLineComments("addition.c");
	}
	
	 // 1. Remove single line comments
	static void removeSingleLineComments(String filename) {
		BufferedReader reader;
		try {
			reader = new BufferedReader(new FileReader(filename));
			String line = reader.readLine();
			while (line != null) {
				if(line.contains("//") && line.split("//")[0].isBlank()) {
					line = reader.readLine();
				}
				System.out.println(line);
				// read next line
				line = reader.readLine();
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	// 2. Remove multi-line comments
	static void removeMultiLineComments(String filename) throws NoSuchAlgorithmException {
		BufferedReader reader;
		int start = 0;
		int end = 0;
		try {
			reader = new BufferedReader(new FileReader(filename));
			String line = reader.readLine();
			while (line != null) {
				
				if(line.contains("/*") && line.contains("*/")) {
					int index = line.indexOf("/*");
					String newLine = line.substring(0, index) ;
					writeInFile(filename, newLine);
					System.out.println("........" + newLine);
					line = reader.readLine();
				}
				
				if(line.contains("/*")) {
					line = reader.readLine();
					while(!line.contains("*/")) {
						line = reader.readLine();
					}
					line = reader.readLine();
				}
				
				writeInFile(filename, line);
				System.out.println(line);
				// read next line
				line = reader.readLine();
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}


	// 3. Remove white spaces and new lines \n
	static void removeWhiteSpaces(String filename) {
		
	}
	
	
	static void writeInFile(String initialFileName, String line) throws IOException, NoSuchAlgorithmException {;
		int index = initialFileName.indexOf(".");
		String obfustactedFileName = initialFileName.substring(0, index) + generateTrulyRandomNo() + ".c";
		
		 FileWriter myWriter = new FileWriter(obfustactedFileName);
		 myWriter.write(line);
		 myWriter.close();
	}
	
	static int generateTrulyRandomNo() throws NoSuchAlgorithmException {
		return SecureRandom.getInstanceStrong().nextInt();
	}

}
